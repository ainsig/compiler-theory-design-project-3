Terminals unused in grammar

    ENDFOLD
    FOLD
    LEFT
    RIGHT


State 11 conflicts: 1 reduce/reduce
State 53 conflicts: 3 reduce/reduce
State 73 conflicts: 2 shift/reduce
State 83 conflicts: 3 reduce/reduce
State 84 conflicts: 3 reduce/reduce
State 85 conflicts: 3 reduce/reduce
State 91 conflicts: 2 shift/reduce
State 92 conflicts: 5 reduce/reduce
State 93 conflicts: 2 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 type: INTEGER
    5     | REAL
    6     | CHARACTER

    7 optional_variable: variable_list
    8                  | variable
    9                  | ε

   10 variable_list: variable
   11              | variable_list variable

   12 variable: IDENTIFIER ':' type IS statement ';'
   13         | IDENTIFIER ':' LIST OF type IS list ';'

   14 list: '(' expressions ')'

   15 parameters: parameter_list
   16           | ε

   17 parameter_list: parameter
   18               | parameter_list ',' parameter

   19 parameter: IDENTIFIER ':' type

   20 expressions: expressions ',' expression
   21            | expression

   22 body: BEGIN_ statement_ END

   23 statement_: statement ';'
   24           | error ';'

   25 statement: expression
   26          | WHEN condition ',' expression ':' expression
   27          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   28          | IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF

   29 elsif_statements: elsif_statement elsif_statements
   30                 | ε

   31 elsif_statement: ELSIF condition THEN statement_

   32 cases: cases case
   33      | ε

   34 case: CASE INT_LITERAL ARROW statement ';'

   35 condition: NOTOP condition
   36          | condition ANDOP relation
   37          | relation

   38 relation: expression RELOP expression
   39         | condition ANDOP condition
   40         | condition OROP condition
   41         | '(' condition ')'

   42 expression: expression ADDOP term
   43           | term

   44 term: term MULOP primary
   45     | term REMOP primary
   46     | primary

   47 primary: term EXOP primary
   48        | '(' expression ')'
   49        | INT_LITERAL
   50        | CHAR_LITERAL
   51        | REAL_LITERAL
   52        | HEX_LITERAL
   53        | IDENTIFIER '(' expression ')'
   54        | IDENTIFIER
   55        | NEGOP primary


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 41 48 53
    ')' (41) 14 41 48 53
    ',' (44) 18 20 26
    ':' (58) 12 13 19 26
    ';' (59) 1 2 3 12 13 23 24 27 34
    error (256) 3 24
    IDENTIFIER <iden> (258) 2 12 13 19 53 54
    INT_LITERAL <value> (259) 34 49
    CHAR_LITERAL <value> (260) 50
    REAL_LITERAL <value> (261) 51
    HEX_LITERAL <iden> (262) 52
    ADDOP <oper> (263) 42
    MULOP <oper> (264) 44
    ANDOP <oper> (265) 36 39
    RELOP <oper> (266) 38
    NEGOP <oper> (267) 55
    REMOP <oper> (268) 45
    EXOP <oper> (269) 47
    ARROW (270) 27 34
    BEGIN_ (271) 22
    CASE (272) 34
    CHARACTER (273) 6
    ELSE (274) 28
    END (275) 22
    ENDSWITCH (276) 27
    FUNCTION (277) 2
    INTEGER (278) 4
    IS (279) 12 13 27
    LIST (280) 13
    OF (281) 13
    OTHERS (282) 27
    RETURNS (283) 2
    SWITCH (284) 27
    WHEN (285) 26
    OROP (286) 40
    NOTOP (287) 35
    ELSIF (288) 31
    ENDFOLD (289)
    ENDIF (290) 28
    FOLD (291)
    IF (292) 28
    LEFT (293)
    REAL (294) 5
    RIGHT (295)
    THEN (296) 28 31


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function (48)
        on left: 1
        on right: 0
    function_header (49)
        on left: 2 3
        on right: 1
    type (50)
        on left: 4 5 6
        on right: 2 12 13 19
    optional_variable (51)
        on left: 7 8 9
        on right: 1
    variable_list (52)
        on left: 10 11
        on right: 7 11
    variable (53)
        on left: 12 13
        on right: 8 10 11
    list <list> (54)
        on left: 14
        on right: 13
    parameters <iden> (55)
        on left: 15 16
        on right: 2
    parameter_list <iden> (56)
        on left: 17 18
        on right: 15 18
    parameter <iden> (57)
        on left: 19
        on right: 17 18
    expressions <list> (58)
        on left: 20 21
        on right: 14 20
    body <value> (59)
        on left: 22
        on right: 1
    statement_ <value> (60)
        on left: 23 24
        on right: 22 28 31
    statement <value> (61)
        on left: 25 26 27 28
        on right: 12 23 27 34
    elsif_statements <value> (62)
        on left: 29 30
        on right: 28 29
    elsif_statement <value> (63)
        on left: 31
        on right: 29
    cases <value> (64)
        on left: 32 33
        on right: 27 32
    case <value> (65)
        on left: 34
        on right: 32
    condition <value> (66)
        on left: 35 36 37
        on right: 26 28 31 35 36 39 40 41
    relation <value> (67)
        on left: 38 39 40 41
        on right: 36 37
    expression <value> (68)
        on left: 42 43
        on right: 20 21 25 26 27 38 42 48 53
    term <value> (69)
        on left: 44 45 46
        on right: 42 43 44 45 47
    primary <value> (70)
        on left: 47 48 49 50 51 52 53 54 55
        on right: 44 45 46 47 55


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body ';'

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 9 (optional_variable)

    optional_variable  go to state 9
    variable_list      go to state 10
    variable           go to state 11


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 16 (parameters)

    parameters      go to state 13
    parameter_list  go to state 14
    parameter       go to state 15


State 7

    0 $accept: function $end •

    $default  accept


State 8

   12 variable: IDENTIFIER • ':' type IS statement ';'
   13         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 16


State 9

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 10

    7 optional_variable: variable_list •
   11 variable_list: variable_list • variable

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 7 (optional_variable)

    variable  go to state 19


State 11

    8 optional_variable: variable •
   10 variable_list: variable •

    IDENTIFIER  reduce using rule 10 (variable_list)
    BEGIN_      reduce using rule 8 (optional_variable)
    BEGIN_      [reduce using rule 10 (variable_list)]
    $default    reduce using rule 8 (optional_variable)


State 12

   19 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 20


State 13

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 21


State 14

   15 parameters: parameter_list •
   18 parameter_list: parameter_list • ',' parameter

    ','  shift, and go to state 22

    $default  reduce using rule 15 (parameters)


State 15

   17 parameter_list: parameter •

    $default  reduce using rule 17 (parameter_list)


State 16

   12 variable: IDENTIFIER ':' • type IS statement ';'
   13         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    LIST       shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 27


State 17

   22 body: BEGIN_ • statement_ END

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_  go to state 39
    statement   go to state 40
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 18

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 44


State 19

   11 variable_list: variable_list variable •

    $default  reduce using rule 11 (variable_list)


State 20

   19 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 45


State 21

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 46


State 22

   18 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 12

    parameter  go to state 47


State 23

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 24

    4 type: INTEGER •

    $default  reduce using rule 4 (type)


State 25

   13 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 48


State 26

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 27

   12 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 49


State 28

   24 statement_: error • ';'

    ';'  shift, and go to state 50


State 29

   53 primary: IDENTIFIER • '(' expression ')'
   54        | IDENTIFIER •

    '('  shift, and go to state 51

    $default  reduce using rule 54 (primary)


State 30

   49 primary: INT_LITERAL •

    $default  reduce using rule 49 (primary)


State 31

   50 primary: CHAR_LITERAL •

    $default  reduce using rule 50 (primary)


State 32

   51 primary: REAL_LITERAL •

    $default  reduce using rule 51 (primary)


State 33

   52 primary: HEX_LITERAL •

    $default  reduce using rule 52 (primary)


State 34

   55 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    term     go to state 52
    primary  go to state 53


State 35

   27 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 54
    term        go to state 42
    primary     go to state 43


State 36

   26 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 57
    relation    go to state 58
    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 37

   28 statement: IF • condition THEN statement_ elsif_statements ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 60
    relation    go to state 58
    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 38

   48 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 61
    term        go to state 42
    primary     go to state 43


State 39

   22 body: BEGIN_ statement_ • END

    END  shift, and go to state 62


State 40

   23 statement_: statement • ';'

    ';'  shift, and go to state 63


State 41

   25 statement: expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 25 (statement)


State 42

   43 expression: term •
   44 term: term • MULOP primary
   45     | term • REMOP primary
   47 primary: term • EXOP primary

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66
    EXOP   shift, and go to state 67

    $default  reduce using rule 43 (expression)


State 43

   46 term: primary •

    $default  reduce using rule 46 (term)


State 44

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 45

   19 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 19 (parameter)


State 46

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 68


State 47

   18 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 18 (parameter_list)


State 48

   13 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 69


State 49

   12 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement   go to state 70
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 50

   24 statement_: error ';' •

    $default  reduce using rule 24 (statement_)


State 51

   53 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 71
    term        go to state 42
    primary     go to state 43


State 52

   44 term: term • MULOP primary
   45     | term • REMOP primary
   47 primary: term • EXOP primary

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66
    EXOP   shift, and go to state 67


State 53

   46 term: primary •
   55 primary: NEGOP primary •

    MULOP     reduce using rule 46 (term)
    MULOP     [reduce using rule 55 (primary)]
    REMOP     reduce using rule 46 (term)
    REMOP     [reduce using rule 55 (primary)]
    EXOP      reduce using rule 46 (term)
    EXOP      [reduce using rule 55 (primary)]
    $default  reduce using rule 55 (primary)


State 54

   27 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64
    IS     shift, and go to state 72


State 55

   35 condition: NOTOP • condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 73
    relation    go to state 58
    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 56

   41 relation: '(' • condition ')'
   48 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 74
    relation    go to state 58
    expression  go to state 75
    term        go to state 42
    primary     go to state 43


State 57

   26 statement: WHEN condition • ',' expression ':' expression
   36 condition: condition • ANDOP relation
   39 relation: condition • ANDOP condition
   40         | condition • OROP condition

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77
    ','    shift, and go to state 78


State 58

   37 condition: relation •

    $default  reduce using rule 37 (condition)


State 59

   38 relation: expression • RELOP expression
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64
    RELOP  shift, and go to state 79


State 60

   28 statement: IF condition • THEN statement_ elsif_statements ELSE statement_ ENDIF
   36 condition: condition • ANDOP relation
   39 relation: condition • ANDOP condition
   40         | condition • OROP condition

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77
    THEN   shift, and go to state 80


State 61

   42 expression: expression • ADDOP term
   48 primary: '(' expression • ')'

    ADDOP  shift, and go to state 64
    ')'    shift, and go to state 81


State 62

   22 body: BEGIN_ statement_ END •

    $default  reduce using rule 22 (body)


State 63

   23 statement_: statement ';' •

    $default  reduce using rule 23 (statement_)


State 64

   42 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    term     go to state 82
    primary  go to state 43


State 65

   44 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    term     go to state 52
    primary  go to state 83


State 66

   45 term: term REMOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    term     go to state 52
    primary  go to state 84


State 67

   47 primary: term EXOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    term     go to state 52
    primary  go to state 85


State 68

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 69

   13 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 86


State 70

   12 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 87


State 71

   42 expression: expression • ADDOP term
   53 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 64
    ')'    shift, and go to state 88


State 72

   27 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 33 (cases)

    cases  go to state 89


State 73

   35 condition: NOTOP condition •
   36          | condition • ANDOP relation
   39 relation: condition • ANDOP condition
   40         | condition • OROP condition

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77

    ANDOP     [reduce using rule 35 (condition)]
    OROP      [reduce using rule 35 (condition)]
    $default  reduce using rule 35 (condition)


State 74

   36 condition: condition • ANDOP relation
   39 relation: condition • ANDOP condition
   40         | condition • OROP condition
   41         | '(' condition • ')'

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77
    ')'    shift, and go to state 90


State 75

   38 relation: expression • RELOP expression
   42 expression: expression • ADDOP term
   48 primary: '(' expression • ')'

    ADDOP  shift, and go to state 64
    RELOP  shift, and go to state 79
    ')'    shift, and go to state 81


State 76

   36 condition: condition ANDOP • relation
   39 relation: condition ANDOP • condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 91
    relation    go to state 92
    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 77

   40 relation: condition OROP • condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 93
    relation    go to state 58
    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 78

   26 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 94
    term        go to state 42
    primary     go to state 43


State 79

   38 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 95
    term        go to state 42
    primary     go to state 43


State 80

   28 statement: IF condition THEN • statement_ elsif_statements ELSE statement_ ENDIF

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_  go to state 96
    statement   go to state 40
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 81

   48 primary: '(' expression ')' •

    $default  reduce using rule 48 (primary)


State 82

   42 expression: expression ADDOP term •
   44 term: term • MULOP primary
   45     | term • REMOP primary
   47 primary: term • EXOP primary

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66
    EXOP   shift, and go to state 67

    $default  reduce using rule 42 (expression)


State 83

   44 term: term MULOP primary •
   46     | primary •

    MULOP     reduce using rule 44 (term)
    MULOP     [reduce using rule 46 (term)]
    REMOP     reduce using rule 44 (term)
    REMOP     [reduce using rule 46 (term)]
    EXOP      reduce using rule 44 (term)
    EXOP      [reduce using rule 46 (term)]
    $default  reduce using rule 44 (term)


State 84

   45 term: term REMOP primary •
   46     | primary •

    MULOP     reduce using rule 45 (term)
    MULOP     [reduce using rule 46 (term)]
    REMOP     reduce using rule 45 (term)
    REMOP     [reduce using rule 46 (term)]
    EXOP      reduce using rule 45 (term)
    EXOP      [reduce using rule 46 (term)]
    $default  reduce using rule 45 (term)


State 85

   46 term: primary •
   47 primary: term EXOP primary •

    MULOP     reduce using rule 46 (term)
    MULOP     [reduce using rule 47 (primary)]
    REMOP     reduce using rule 46 (term)
    REMOP     [reduce using rule 47 (primary)]
    EXOP      reduce using rule 46 (term)
    EXOP      [reduce using rule 47 (primary)]
    $default  reduce using rule 47 (primary)


State 86

   13 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 97

    list  go to state 98


State 87

   12 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 12 (variable)


State 88

   53 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 53 (primary)


State 89

   27 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   32 cases: cases • case

    CASE    shift, and go to state 99
    OTHERS  shift, and go to state 100

    case  go to state 101


State 90

   41 relation: '(' condition ')' •

    $default  reduce using rule 41 (relation)


State 91

   36 condition: condition • ANDOP relation
   39 relation: condition • ANDOP condition
   39         | condition ANDOP condition •
   40         | condition • OROP condition

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77

    ANDOP     [reduce using rule 39 (relation)]
    OROP      [reduce using rule 39 (relation)]
    $default  reduce using rule 39 (relation)


State 92

   36 condition: condition ANDOP relation •
   37          | relation •

    ANDOP     reduce using rule 36 (condition)
    ANDOP     [reduce using rule 37 (condition)]
    OROP      reduce using rule 36 (condition)
    OROP      [reduce using rule 37 (condition)]
    THEN      reduce using rule 36 (condition)
    THEN      [reduce using rule 37 (condition)]
    ')'       reduce using rule 36 (condition)
    ')'       [reduce using rule 37 (condition)]
    ','       reduce using rule 36 (condition)
    ','       [reduce using rule 37 (condition)]
    $default  reduce using rule 36 (condition)


State 93

   36 condition: condition • ANDOP relation
   39 relation: condition • ANDOP condition
   40         | condition • OROP condition
   40         | condition OROP condition •

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77

    ANDOP     [reduce using rule 40 (relation)]
    OROP      [reduce using rule 40 (relation)]
    $default  reduce using rule 40 (relation)


State 94

   26 statement: WHEN condition ',' expression • ':' expression
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64
    ':'    shift, and go to state 102


State 95

   38 relation: expression RELOP expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 38 (relation)


State 96

   28 statement: IF condition THEN statement_ • elsif_statements ELSE statement_ ENDIF

    ELSIF  shift, and go to state 103

    $default  reduce using rule 30 (elsif_statements)

    elsif_statements  go to state 104
    elsif_statement   go to state 105


State 97

   14 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expressions  go to state 106
    expression   go to state 107
    term         go to state 42
    primary      go to state 43


State 98

   13 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 108


State 99

   34 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 109


State 100

   27 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 110


State 101

   32 cases: cases case •

    $default  reduce using rule 32 (cases)


State 102

   26 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 111
    term        go to state 42
    primary     go to state 43


State 103

   31 elsif_statement: ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 112
    relation    go to state 58
    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 104

   28 statement: IF condition THEN statement_ elsif_statements • ELSE statement_ ENDIF

    ELSE  shift, and go to state 113


State 105

   29 elsif_statements: elsif_statement • elsif_statements

    ELSIF  shift, and go to state 103

    $default  reduce using rule 30 (elsif_statements)

    elsif_statements  go to state 114
    elsif_statement   go to state 105


State 106

   14 list: '(' expressions • ')'
   20 expressions: expressions • ',' expression

    ')'  shift, and go to state 115
    ','  shift, and go to state 116


State 107

   21 expressions: expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 21 (expressions)


State 108

   13 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 13 (variable)


State 109

   34 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 117


State 110

   27 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement   go to state 118
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 111

   26 statement: WHEN condition ',' expression ':' expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 26 (statement)


State 112

   31 elsif_statement: ELSIF condition • THEN statement_
   36 condition: condition • ANDOP relation
   39 relation: condition • ANDOP condition
   40         | condition • OROP condition

    ANDOP  shift, and go to state 76
    OROP   shift, and go to state 77
    THEN   shift, and go to state 119


State 113

   28 statement: IF condition THEN statement_ elsif_statements ELSE • statement_ ENDIF

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_  go to state 120
    statement   go to state 40
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 114

   29 elsif_statements: elsif_statement elsif_statements •

    $default  reduce using rule 29 (elsif_statements)


State 115

   14 list: '(' expressions ')' •

    $default  reduce using rule 14 (list)


State 116

   20 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression  go to state 121
    term        go to state 42
    primary     go to state 43


State 117

   34 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement   go to state 122
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 118

   27 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 123


State 119

   31 elsif_statement: ELSIF condition THEN • statement_

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_  go to state 124
    statement   go to state 40
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 120

   28 statement: IF condition THEN statement_ elsif_statements ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 125


State 121

   20 expressions: expressions ',' expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 20 (expressions)


State 122

   34 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 126


State 123

   27 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 127


State 124

   31 elsif_statement: ELSIF condition THEN statement_ •

    $default  reduce using rule 31 (elsif_statement)


State 125

   28 statement: IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF •

    $default  reduce using rule 28 (statement)


State 126

   34 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 34 (case)


State 127

   27 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 27 (statement)
