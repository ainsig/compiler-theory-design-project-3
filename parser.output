State 11 conflicts: 1 reduce/reduce
State 54 conflicts: 3 reduce/reduce
State 76 conflicts: 2 shift/reduce
State 95 conflicts: 3 reduce/reduce
State 96 conflicts: 3 reduce/reduce
State 97 conflicts: 3 reduce/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 5 reduce/reduce
State 105 conflicts: 2 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 type: INTEGER
    5     | REAL
    6     | CHARACTER

    7 optional_variable: variable_list
    8                  | variable
    9                  | ε

   10 variable_list: variable
   11              | variable_list variable

   12 variable: IDENTIFIER ':' type IS statement ';'
   13         | IDENTIFIER ':' LIST OF type IS list ';'

   14 list: '(' expressions ')'

   15 parameters: parameter_list
   16           | ε

   17 parameter_list: parameter
   18               | parameter_list ',' parameter

   19 parameter: IDENTIFIER ':' type

   20 expressions: expressions ',' expression
   21            | expression

   22 body: BEGIN_ statement_ END

   23 statement_: statement ';'
   24           | error ';'

   25 statement: expression
   26          | WHEN condition ',' expression ':' expression
   27          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   28          | FOLD LEFT operator IDENTIFIER ENDFOLD
   29          | FOLD RIGHT operator IDENTIFIER ENDFOLD
   30          | IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF

   31 operator: ADDOP
   32         | MULOP
   33         | ANDOP
   34         | RELOP
   35         | NEGOP
   36         | REMOP
   37         | EXOP

   38 elsif_statements: elsif_statement elsif_statements
   39                 | ε

   40 elsif_statement: ELSIF condition THEN statement_

   41 cases: cases case
   42      | ε

   43 case: CASE INT_LITERAL ARROW statement ';'

   44 condition: NOTOP condition
   45          | condition ANDOP relation
   46          | relation

   47 relation: expression RELOP expression
   48         | condition ANDOP condition
   49         | condition OROP condition
   50         | '(' condition ')'

   51 expression: expression ADDOP term
   52           | term

   53 term: term MULOP primary
   54     | term REMOP primary
   55     | primary

   56 primary: term EXOP primary
   57        | '(' expression ')'
   58        | INT_LITERAL
   59        | CHAR_LITERAL
   60        | REAL_LITERAL
   61        | HEX_LITERAL
   62        | IDENTIFIER '(' expression ')'
   63        | IDENTIFIER
   64        | NEGOP primary


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 50 57 62
    ')' (41) 14 50 57 62
    ',' (44) 18 20 26
    ':' (58) 12 13 19 26
    ';' (59) 1 2 3 12 13 23 24 27 43
    error (256) 3 24
    IDENTIFIER <iden> (258) 2 12 13 19 28 29 62 63
    INT_LITERAL <value> (259) 43 58
    CHAR_LITERAL <value> (260) 59
    REAL_LITERAL <value> (261) 60
    HEX_LITERAL <iden> (262) 61
    ADDOP <oper> (263) 31 51
    MULOP <oper> (264) 32 53
    ANDOP <oper> (265) 33 45 48
    RELOP <oper> (266) 34 47
    NEGOP <oper> (267) 35 64
    REMOP <oper> (268) 36 54
    EXOP <oper> (269) 37 56
    ARROW (270) 27 43
    BEGIN_ (271) 22
    CASE (272) 43
    CHARACTER (273) 6
    ELSE (274) 30
    END (275) 22
    ENDSWITCH (276) 27
    FUNCTION (277) 2
    INTEGER (278) 4
    IS (279) 12 13 27
    LIST (280) 13
    OF (281) 13
    OTHERS (282) 27
    RETURNS (283) 2
    SWITCH (284) 27
    WHEN (285) 26
    OROP (286) 49
    NOTOP (287) 44
    ELSIF (288) 40
    ENDFOLD (289) 28 29
    ENDIF (290) 30
    FOLD (291) 28 29
    IF (292) 30
    LEFT (293) 28
    REAL (294) 5
    RIGHT (295) 29
    THEN (296) 30 40


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function (48)
        on left: 1
        on right: 0
    function_header (49)
        on left: 2 3
        on right: 1
    type (50)
        on left: 4 5 6
        on right: 2 12 13 19
    optional_variable (51)
        on left: 7 8 9
        on right: 1
    variable_list (52)
        on left: 10 11
        on right: 7 11
    variable (53)
        on left: 12 13
        on right: 8 10 11
    list <list> (54)
        on left: 14
        on right: 13
    parameters <iden> (55)
        on left: 15 16
        on right: 2
    parameter_list <iden> (56)
        on left: 17 18
        on right: 15 18
    parameter <iden> (57)
        on left: 19
        on right: 17 18
    expressions <list> (58)
        on left: 20 21
        on right: 14 20
    body <value> (59)
        on left: 22
        on right: 1
    statement_ <value> (60)
        on left: 23 24
        on right: 22 30 40
    statement <value> (61)
        on left: 25 26 27 28 29 30
        on right: 12 23 27 43
    operator <oper> (62)
        on left: 31 32 33 34 35 36 37
        on right: 28 29
    elsif_statements <value> (63)
        on left: 38 39
        on right: 30 38
    elsif_statement <value> (64)
        on left: 40
        on right: 38
    cases <value> (65)
        on left: 41 42
        on right: 27 41
    case <value> (66)
        on left: 43
        on right: 41
    condition <value> (67)
        on left: 44 45 46
        on right: 26 30 40 44 45 48 49 50
    relation <value> (68)
        on left: 47 48 49 50
        on right: 45 46
    expression <value> (69)
        on left: 51 52
        on right: 20 21 25 26 27 47 51 57 62
    term <value> (70)
        on left: 53 54 55
        on right: 51 52 53 54 56
    primary <value> (71)
        on left: 56 57 58 59 60 61 62 63 64
        on right: 53 54 55 56 64


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body ';'

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 9 (optional_variable)

    optional_variable  go to state 9
    variable_list      go to state 10
    variable           go to state 11


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 16 (parameters)

    parameters      go to state 13
    parameter_list  go to state 14
    parameter       go to state 15


State 7

    0 $accept: function $end •

    $default  accept


State 8

   12 variable: IDENTIFIER • ':' type IS statement ';'
   13         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 16


State 9

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 10

    7 optional_variable: variable_list •
   11 variable_list: variable_list • variable

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 7 (optional_variable)

    variable  go to state 19


State 11

    8 optional_variable: variable •
   10 variable_list: variable •

    IDENTIFIER  reduce using rule 10 (variable_list)
    BEGIN_      reduce using rule 8 (optional_variable)
    BEGIN_      [reduce using rule 10 (variable_list)]
    $default    reduce using rule 8 (optional_variable)


State 12

   19 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 20


State 13

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 21


State 14

   15 parameters: parameter_list •
   18 parameter_list: parameter_list • ',' parameter

    ','  shift, and go to state 22

    $default  reduce using rule 15 (parameters)


State 15

   17 parameter_list: parameter •

    $default  reduce using rule 17 (parameter_list)


State 16

   12 variable: IDENTIFIER ':' • type IS statement ';'
   13         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    LIST       shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 27


State 17

   22 body: BEGIN_ • statement_ END

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 40
    statement   go to state 41
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 18

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 45


State 19

   11 variable_list: variable_list variable •

    $default  reduce using rule 11 (variable_list)


State 20

   19 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 46


State 21

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 47


State 22

   18 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 12

    parameter  go to state 48


State 23

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 24

    4 type: INTEGER •

    $default  reduce using rule 4 (type)


State 25

   13 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 49


State 26

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 27

   12 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 50


State 28

   24 statement_: error • ';'

    ';'  shift, and go to state 51


State 29

   62 primary: IDENTIFIER • '(' expression ')'
   63        | IDENTIFIER •

    '('  shift, and go to state 52

    $default  reduce using rule 63 (primary)


State 30

   58 primary: INT_LITERAL •

    $default  reduce using rule 58 (primary)


State 31

   59 primary: CHAR_LITERAL •

    $default  reduce using rule 59 (primary)


State 32

   60 primary: REAL_LITERAL •

    $default  reduce using rule 60 (primary)


State 33

   61 primary: HEX_LITERAL •

    $default  reduce using rule 61 (primary)


State 34

   64 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 53
    primary  go to state 54


State 35

   27 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 55
    term        go to state 43
    primary     go to state 44


State 36

   26 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 58
    relation    go to state 59
    expression  go to state 60
    term        go to state 43
    primary     go to state 44


State 37

   28 statement: FOLD • LEFT operator IDENTIFIER ENDFOLD
   29          | FOLD • RIGHT operator IDENTIFIER ENDFOLD

    LEFT   shift, and go to state 61
    RIGHT  shift, and go to state 62


State 38

   30 statement: IF • condition THEN statement_ elsif_statements ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 63
    relation    go to state 59
    expression  go to state 60
    term        go to state 43
    primary     go to state 44


State 39

   57 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 64
    term        go to state 43
    primary     go to state 44


State 40

   22 body: BEGIN_ statement_ • END

    END  shift, and go to state 65


State 41

   23 statement_: statement • ';'

    ';'  shift, and go to state 66


State 42

   25 statement: expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67

    $default  reduce using rule 25 (statement)


State 43

   52 expression: term •
   53 term: term • MULOP primary
   54     | term • REMOP primary
   56 primary: term • EXOP primary

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 52 (expression)


State 44

   55 term: primary •

    $default  reduce using rule 55 (term)


State 45

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 46

   19 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 19 (parameter)


State 47

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 71


State 48

   18 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 18 (parameter_list)


State 49

   13 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 72


State 50

   12 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 73
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 51

   24 statement_: error ';' •

    $default  reduce using rule 24 (statement_)


State 52

   62 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 74
    term        go to state 43
    primary     go to state 44


State 53

   53 term: term • MULOP primary
   54     | term • REMOP primary
   56 primary: term • EXOP primary

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70


State 54

   55 term: primary •
   64 primary: NEGOP primary •

    MULOP     reduce using rule 55 (term)
    MULOP     [reduce using rule 64 (primary)]
    REMOP     reduce using rule 55 (term)
    REMOP     [reduce using rule 64 (primary)]
    EXOP      reduce using rule 55 (term)
    EXOP      [reduce using rule 64 (primary)]
    $default  reduce using rule 64 (primary)


State 55

   27 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67
    IS     shift, and go to state 75


State 56

   44 condition: NOTOP • condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 76
    relation    go to state 59
    expression  go to state 60
    term        go to state 43
    primary     go to state 44


State 57

   50 relation: '(' • condition ')'
   57 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 77
    relation    go to state 59
    expression  go to state 78
    term        go to state 43
    primary     go to state 44


State 58

   26 statement: WHEN condition • ',' expression ':' expression
   45 condition: condition • ANDOP relation
   48 relation: condition • ANDOP condition
   49         | condition • OROP condition

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80
    ','    shift, and go to state 81


State 59

   46 condition: relation •

    $default  reduce using rule 46 (condition)


State 60

   47 relation: expression • RELOP expression
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67
    RELOP  shift, and go to state 82


State 61

   28 statement: FOLD LEFT • operator IDENTIFIER ENDFOLD

    ADDOP  shift, and go to state 83
    MULOP  shift, and go to state 84
    ANDOP  shift, and go to state 85
    RELOP  shift, and go to state 86
    NEGOP  shift, and go to state 87
    REMOP  shift, and go to state 88
    EXOP   shift, and go to state 89

    operator  go to state 90


State 62

   29 statement: FOLD RIGHT • operator IDENTIFIER ENDFOLD

    ADDOP  shift, and go to state 83
    MULOP  shift, and go to state 84
    ANDOP  shift, and go to state 85
    RELOP  shift, and go to state 86
    NEGOP  shift, and go to state 87
    REMOP  shift, and go to state 88
    EXOP   shift, and go to state 89

    operator  go to state 91


State 63

   30 statement: IF condition • THEN statement_ elsif_statements ELSE statement_ ENDIF
   45 condition: condition • ANDOP relation
   48 relation: condition • ANDOP condition
   49         | condition • OROP condition

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80
    THEN   shift, and go to state 92


State 64

   51 expression: expression • ADDOP term
   57 primary: '(' expression • ')'

    ADDOP  shift, and go to state 67
    ')'    shift, and go to state 93


State 65

   22 body: BEGIN_ statement_ END •

    $default  reduce using rule 22 (body)


State 66

   23 statement_: statement ';' •

    $default  reduce using rule 23 (statement_)


State 67

   51 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 94
    primary  go to state 44


State 68

   53 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 53
    primary  go to state 95


State 69

   54 term: term REMOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 53
    primary  go to state 96


State 70

   56 primary: term EXOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 53
    primary  go to state 97


State 71

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 72

   13 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 98


State 73

   12 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 99


State 74

   51 expression: expression • ADDOP term
   62 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 67
    ')'    shift, and go to state 100


State 75

   27 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 42 (cases)

    cases  go to state 101


State 76

   44 condition: NOTOP condition •
   45          | condition • ANDOP relation
   48 relation: condition • ANDOP condition
   49         | condition • OROP condition

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80

    ANDOP     [reduce using rule 44 (condition)]
    OROP      [reduce using rule 44 (condition)]
    $default  reduce using rule 44 (condition)


State 77

   45 condition: condition • ANDOP relation
   48 relation: condition • ANDOP condition
   49         | condition • OROP condition
   50         | '(' condition • ')'

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80
    ')'    shift, and go to state 102


State 78

   47 relation: expression • RELOP expression
   51 expression: expression • ADDOP term
   57 primary: '(' expression • ')'

    ADDOP  shift, and go to state 67
    RELOP  shift, and go to state 82
    ')'    shift, and go to state 93


State 79

   45 condition: condition ANDOP • relation
   48 relation: condition ANDOP • condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 103
    relation    go to state 104
    expression  go to state 60
    term        go to state 43
    primary     go to state 44


State 80

   49 relation: condition OROP • condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 105
    relation    go to state 59
    expression  go to state 60
    term        go to state 43
    primary     go to state 44


State 81

   26 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 106
    term        go to state 43
    primary     go to state 44


State 82

   47 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 107
    term        go to state 43
    primary     go to state 44


State 83

   31 operator: ADDOP •

    $default  reduce using rule 31 (operator)


State 84

   32 operator: MULOP •

    $default  reduce using rule 32 (operator)


State 85

   33 operator: ANDOP •

    $default  reduce using rule 33 (operator)


State 86

   34 operator: RELOP •

    $default  reduce using rule 34 (operator)


State 87

   35 operator: NEGOP •

    $default  reduce using rule 35 (operator)


State 88

   36 operator: REMOP •

    $default  reduce using rule 36 (operator)


State 89

   37 operator: EXOP •

    $default  reduce using rule 37 (operator)


State 90

   28 statement: FOLD LEFT operator • IDENTIFIER ENDFOLD

    IDENTIFIER  shift, and go to state 108


State 91

   29 statement: FOLD RIGHT operator • IDENTIFIER ENDFOLD

    IDENTIFIER  shift, and go to state 109


State 92

   30 statement: IF condition THEN • statement_ elsif_statements ELSE statement_ ENDIF

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 110
    statement   go to state 41
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 93

   57 primary: '(' expression ')' •

    $default  reduce using rule 57 (primary)


State 94

   51 expression: expression ADDOP term •
   53 term: term • MULOP primary
   54     | term • REMOP primary
   56 primary: term • EXOP primary

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 51 (expression)


State 95

   53 term: term MULOP primary •
   55     | primary •

    MULOP     reduce using rule 53 (term)
    MULOP     [reduce using rule 55 (term)]
    REMOP     reduce using rule 53 (term)
    REMOP     [reduce using rule 55 (term)]
    EXOP      reduce using rule 53 (term)
    EXOP      [reduce using rule 55 (term)]
    $default  reduce using rule 53 (term)


State 96

   54 term: term REMOP primary •
   55     | primary •

    MULOP     reduce using rule 54 (term)
    MULOP     [reduce using rule 55 (term)]
    REMOP     reduce using rule 54 (term)
    REMOP     [reduce using rule 55 (term)]
    EXOP      reduce using rule 54 (term)
    EXOP      [reduce using rule 55 (term)]
    $default  reduce using rule 54 (term)


State 97

   55 term: primary •
   56 primary: term EXOP primary •

    MULOP     reduce using rule 55 (term)
    MULOP     [reduce using rule 56 (primary)]
    REMOP     reduce using rule 55 (term)
    REMOP     [reduce using rule 56 (primary)]
    EXOP      reduce using rule 55 (term)
    EXOP      [reduce using rule 56 (primary)]
    $default  reduce using rule 56 (primary)


State 98

   13 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 111

    list  go to state 112


State 99

   12 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 12 (variable)


State 100

   62 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 62 (primary)


State 101

   27 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   41 cases: cases • case

    CASE    shift, and go to state 113
    OTHERS  shift, and go to state 114

    case  go to state 115


State 102

   50 relation: '(' condition ')' •

    $default  reduce using rule 50 (relation)


State 103

   45 condition: condition • ANDOP relation
   48 relation: condition • ANDOP condition
   48         | condition ANDOP condition •
   49         | condition • OROP condition

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80

    ANDOP     [reduce using rule 48 (relation)]
    OROP      [reduce using rule 48 (relation)]
    $default  reduce using rule 48 (relation)


State 104

   45 condition: condition ANDOP relation •
   46          | relation •

    ANDOP     reduce using rule 45 (condition)
    ANDOP     [reduce using rule 46 (condition)]
    OROP      reduce using rule 45 (condition)
    OROP      [reduce using rule 46 (condition)]
    THEN      reduce using rule 45 (condition)
    THEN      [reduce using rule 46 (condition)]
    ')'       reduce using rule 45 (condition)
    ')'       [reduce using rule 46 (condition)]
    ','       reduce using rule 45 (condition)
    ','       [reduce using rule 46 (condition)]
    $default  reduce using rule 45 (condition)


State 105

   45 condition: condition • ANDOP relation
   48 relation: condition • ANDOP condition
   49         | condition • OROP condition
   49         | condition OROP condition •

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80

    ANDOP     [reduce using rule 49 (relation)]
    OROP      [reduce using rule 49 (relation)]
    $default  reduce using rule 49 (relation)


State 106

   26 statement: WHEN condition ',' expression • ':' expression
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67
    ':'    shift, and go to state 116


State 107

   47 relation: expression RELOP expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67

    $default  reduce using rule 47 (relation)


State 108

   28 statement: FOLD LEFT operator IDENTIFIER • ENDFOLD

    ENDFOLD  shift, and go to state 117


State 109

   29 statement: FOLD RIGHT operator IDENTIFIER • ENDFOLD

    ENDFOLD  shift, and go to state 118


State 110

   30 statement: IF condition THEN statement_ • elsif_statements ELSE statement_ ENDIF

    ELSIF  shift, and go to state 119

    $default  reduce using rule 39 (elsif_statements)

    elsif_statements  go to state 120
    elsif_statement   go to state 121


State 111

   14 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expressions  go to state 122
    expression   go to state 123
    term         go to state 43
    primary      go to state 44


State 112

   13 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 124


State 113

   43 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 125


State 114

   27 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 126


State 115

   41 cases: cases case •

    $default  reduce using rule 41 (cases)


State 116

   26 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 127
    term        go to state 43
    primary     go to state 44


State 117

   28 statement: FOLD LEFT operator IDENTIFIER ENDFOLD •

    $default  reduce using rule 28 (statement)


State 118

   29 statement: FOLD RIGHT operator IDENTIFIER ENDFOLD •

    $default  reduce using rule 29 (statement)


State 119

   40 elsif_statement: ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    NOTOP         shift, and go to state 56
    '('           shift, and go to state 57

    condition   go to state 128
    relation    go to state 59
    expression  go to state 60
    term        go to state 43
    primary     go to state 44


State 120

   30 statement: IF condition THEN statement_ elsif_statements • ELSE statement_ ENDIF

    ELSE  shift, and go to state 129


State 121

   38 elsif_statements: elsif_statement • elsif_statements

    ELSIF  shift, and go to state 119

    $default  reduce using rule 39 (elsif_statements)

    elsif_statements  go to state 130
    elsif_statement   go to state 121


State 122

   14 list: '(' expressions • ')'
   20 expressions: expressions • ',' expression

    ')'  shift, and go to state 131
    ','  shift, and go to state 132


State 123

   21 expressions: expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67

    $default  reduce using rule 21 (expressions)


State 124

   13 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 13 (variable)


State 125

   43 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 133


State 126

   27 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 134
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 127

   26 statement: WHEN condition ',' expression ':' expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67

    $default  reduce using rule 26 (statement)


State 128

   40 elsif_statement: ELSIF condition • THEN statement_
   45 condition: condition • ANDOP relation
   48 relation: condition • ANDOP condition
   49         | condition • OROP condition

    ANDOP  shift, and go to state 79
    OROP   shift, and go to state 80
    THEN   shift, and go to state 135


State 129

   30 statement: IF condition THEN statement_ elsif_statements ELSE • statement_ ENDIF

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 136
    statement   go to state 41
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 130

   38 elsif_statements: elsif_statement elsif_statements •

    $default  reduce using rule 38 (elsif_statements)


State 131

   14 list: '(' expressions ')' •

    $default  reduce using rule 14 (list)


State 132

   20 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 137
    term        go to state 43
    primary     go to state 44


State 133

   43 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 138
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 134

   27 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 139


State 135

   40 elsif_statement: ELSIF condition THEN • statement_

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    HEX_LITERAL   shift, and go to state 33
    NEGOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    FOLD          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 140
    statement   go to state 41
    expression  go to state 42
    term        go to state 43
    primary     go to state 44


State 136

   30 statement: IF condition THEN statement_ elsif_statements ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 141


State 137

   20 expressions: expressions ',' expression •
   51 expression: expression • ADDOP term

    ADDOP  shift, and go to state 67

    $default  reduce using rule 20 (expressions)


State 138

   43 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 142


State 139

   27 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 143


State 140

   40 elsif_statement: ELSIF condition THEN statement_ •

    $default  reduce using rule 40 (elsif_statement)


State 141

   30 statement: IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF •

    $default  reduce using rule 30 (statement)


State 142

   43 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 43 (case)


State 143

   27 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 27 (statement)
